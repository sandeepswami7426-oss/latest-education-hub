name: Update Homepage with All Sections

on:
  schedule:
    - cron: '5 * * * *'  # рд╣рд░ рдШрдВрдЯреЗ 5 рдорд┐рдирдЯ рдкрд░ рдЪрд▓реЗрдЧрд╛
  workflow_dispatch:

jobs:
  update-homepage:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Fetch RSS feeds
      run: |
        curl -s https://www.jagranjosh.com/rss/education.xml -o education.xml
        curl -s https://www.jagranjosh.com/rss/jobs.xml -o jobs.xml
        curl -s https://www.hindustantimes.com/feeds/rss/india-news/rssfeed.xml -o current.xml

    - name: Extract headlines with fallback
      run: |
        EDU=$(grep -oP '(?<=<title>).*?(?=</title>)' education.xml | sed -n '2p')
        JOB=$(grep -oP '(?<=<title>).*?(?=</title>)' jobs.xml | sed -n '2p')
        CUR=$(grep -oP '(?<=<title>).*?(?=</title>)' current.xml | sed -n '2p')

        [ -z "$EDU" ] && EDU="тЪая╕П рдХреЛрдИ рдПрдЬреБрдХреЗрд╢рди рд╣реЗрдбрд▓рд╛рдЗрди рдирд╣реАрдВ рдорд┐рд▓реА"
        [ -z "$JOB" ] && JOB="тЪая╕П рдХреЛрдИ рдЬреЙрдм рд╣реЗрдбрд▓рд╛рдЗрди рдирд╣реАрдВ рдорд┐рд▓реА"
        [ -z "$CUR" ] && CUR="тЪая╕П рдХреЛрдИ рдХрд░реЗрдВрдЯ рдЕрдлреЗрдпрд░реНрд╕ рд╣реЗрдбрд▓рд╛рдЗрди рдирд╣реАрдВ рдорд┐рд▓реА"

        echo "EDU=$EDU" >> $GITHUB_ENV
        echo "JOB=$JOB" >> $GITHUB_ENV
        echo "CUR=$CUR" >> $GITHUB_ENV

        echo "ЁЯУЪ Education: $EDU"
        echo "ЁЯТ╝ Jobs: $JOB"
        echo "ЁЯУ░ Current Affairs: $CUR"

    - name: Build homepage content and update timestamp
      run: |
        RESULTS_SECTION="<section id='results' class='card'><h2>ЁЯУК Results</h2><article><h4>рдкрд░реАрдХреНрд╖рд╛ рдкрд░рд┐рдгрд╛рдо</h4><p>рдирдП рд░рд┐рдЬрд▓реНрдЯреНрд╕ рдпрд╣рд╛рдБ рдЕрдкрдбреЗрдЯ рдХрд┐рдП рдЬрд╛рдПрдВрдЧреЗред</p><a href='results.html' class='read-more-btn'>рд╕рднреА рд░рд┐рдЬрд▓реНрдЯреНрд╕ рджреЗрдЦреЗрдВ...</a></article></section>"
        QUIZZES_SECTION="<section id='quizzes' class='card'><h2>ЁЯза Quizzes</h2><article><h4>рдбреЗрд▓реА рдХреНрд╡рд┐рдЬрд╝</h4><p>рддреИрдпрд╛рд░реА рдХреЗ рд▓рд┐рдП рдХреНрд╡рд┐рдЬрд╝ рдпрд╣рд╛рдБ рдЕрдкрдбреЗрдЯ рд╣реЛрдВрдЧреЗред</p><a href='quizzes.html' class='read-more-btn'>рдХреНрд╡рд┐рдЬрд╝ рд╢реБрд░реВ рдХрд░реЗрдВ...</a></article></section>"

        DATE=$(date +"%d %B %Y, %I:%M %p")
        TIMESTAMP="<p style='font-size: 0.9em; color: gray;'>ЁЯФД рдЕрдВрддрд┐рдо рдЕрдкрдбреЗрдЯ: $DATE</p>"

        NEW_CONTENT="<main>"
        NEW_CONTENT+="<h2>ЁЯФФ рддрд╛рдЬрд╝рд╛ рдЦрдмрд░реЗрдВ рдФрд░ рдЕрдкрдбреЗрдЯреНрд╕</h2>"
        NEW_CONTENT+="$TIMESTAMP"
        NEW_CONTENT+="<section id='education' class='card'><h2>ЁЯОУ Education News</h2><article><p>${EDU}</p></article><a href='education.html' class='full-page-btn'>рд╕рднреА рдПрдЬреБрдХреЗрд╢рди рдиреНрдпреВрдЬрд╝ рджреЗрдЦреЗрдВ</a></section>"
        NEW_CONTENT+="<section id='jobs' class='card'><h2>ЁЯТ╝ Latest Jobs</h2><article><p>${JOB}</p></article><a href='jobs.html' class='full-page-btn'>рд╕рднреА рд▓реЗрдЯреЗрд╕реНрдЯ рдЬреЙрдмреНрд╕ рджреЗрдЦреЗрдВ</a></section>"
        NEW_CONTENT+="<section id='current-affairs' class='card'><h2>ЁЯУ░ Current Affairs</h2><article><p>${CUR}</p></article><a href='current-affairs.html' class='full-page-btn'>рд╕рднреА рдХрд░реЗрдВрдЯ рдЕрдлреЗрдпрд░реНрд╕ рджреЗрдЦреЗрдВ</a></section>"
        NEW_CONTENT+="${RESULTS_SECTION}"
        NEW_CONTENT+="${QUIZZES_SECTION}"
        NEW_CONTENT+="</main>"

        # Replace <main> block safely
        sed -i '/<main>/,/<\/main>/c\'"$NEW_CONTENT"'' index.html

        echo "тЬЕ Homepage rebuilt with latest content and timestamp: $DATE"

    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

        echo "ЁЯУМ Staging all modified files..."
        git add index.html

        if git diff --cached --quiet; then
          echo "тЬЕ Homepage already up to date. No commit needed."
        else
          COMMIT_MSG="ЁЯдЦ Homepage Updated: $EDU | $JOB | $CUR"
          echo "тЬЕ Committing with message: $COMMIT_MSG"
          git commit -m "$COMMIT_MSG"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push
          echo "ЁЯОЙ Push successful!"
        fi